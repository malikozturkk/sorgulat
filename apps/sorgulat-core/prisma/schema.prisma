// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// ENUMS
enum Role {
  USER
  ADMIN
}

enum TokenType {
  ACCESS
  REFRESH
  RESET_PASSWORD
  VERIFY_EMAIL
}

enum Gender {
  MALE
  FEMALE
  LGBT
}

// Models
model User {
  id              Int      @id @default(autoincrement())
  email           String   @unique
  name            String?
  lastName        String?
  password        String
  phone           Json
  organisationId  Int
  organisation    Organisation  @relation(fields: [organisationId], references: [id])
  privacyPolicy   Boolean  @default(false)
  commercialMsg   Boolean  @default(false)
  role            Role     @default(USER)
  isEmailVerified Boolean  @default(false)
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
  Token           Token[]
}

model Token {
  id          Int       @id @default(autoincrement())
  token       String
  type        TokenType
  expires     DateTime
  blacklisted Boolean
  createdAt   DateTime  @default(now())
  user        User      @relation(fields: [userId], references: [id])
  userId      Int
}

model Organisation {
  id      Int    @id @default(autoincrement())
  name    String
  address String
  User    User[]
  customerLists  CustomerList[]
}

model CustomerList {
  id              Int       @id @default(autoincrement())
  name            String
  description     String?
  creationDate    DateTime @default(now())
  updatedAt       DateTime @updatedAt
  customers       Customer[]
  segments        Segment[]
  organisationId  Int
  organisation    Organisation  @relation(fields: [organisationId], references: [id])
}

model Customer {
  id                         Int                @id @default(autoincrement())
  customerList               CustomerList       @relation(fields: [customerListId], references: [id])
  customerListId             Int
  firstName                  String
  lastName                   String
  email                      String
  phone                      String?
  age                        Int    
  gender                     Gender 
  location                   String?
  incomeLevel                String?            
  educationLevel             String?     
  websiteTimeSpent           Int?        
  pageViewCount              Int?        
  purchaseHistory            String?     
  emailOpeningRate           Float?      
  clickRate                  Float?      
  socialMediaInteraction     Json?       
  interests                  String?     
  lastActivityDate           DateTime?   
}

model Segment {
  id             Int               @id @default(autoincrement())
  customerList   CustomerList      @relation(fields: [customerListId], references: [id])
  customerListId Int
  name           String
  description    String?
  criteria       String
}
